/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as AppImport } from './routes/app'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const AppProfileLazyImport = createFileRoute('/app/profile')()

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppProfileLazyRoute = AppProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/app.profile.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/app/profile': {
      id: '/app/profile'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileLazyImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AdminRoute,
  AppRoute: AppRoute.addChildren({ AppProfileLazyRoute }),
  LoginRoute,
  RegisterRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/admin",
        "/app",
        "/login",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/admin": {
      "filePath": "admin.jsx"
    },
    "/app": {
      "filePath": "app.jsx",
      "children": [
        "/app/profile"
      ]
    },
    "/login": {
      "filePath": "login.jsx"
    },
    "/register": {
      "filePath": "register.jsx"
    },
    "/app/profile": {
      "filePath": "app.profile.lazy.jsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
